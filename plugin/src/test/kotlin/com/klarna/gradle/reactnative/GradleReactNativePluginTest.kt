/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.klarna.gradle.reactnative

import org.gradle.testfixtures.ProjectBuilder
import kotlin.test.Test
import kotlin.test.assertEquals
import kotlin.test.assertNotNull

/** Unit tests. */
class GradleReactNativePluginTest {
    @Test
    fun `plugin registers task compileRnBundle`() {
        // Given
        val project = ProjectBuilder.builder().build()

        // When
        project.plugins.apply(GradleReactNativePlugin.PLUGIN)

        // Then
        assertNotNull(project.tasks.findByName(CompileRnBundleTask.NAME))
    }

    @Test
    fun `plugin register task copyJsBundle`() {
        // Given
        val project = ProjectBuilder.builder().build()

        // When
        project.plugins.apply(GradleReactNativePlugin.PLUGIN)

        // Then
        assertNotNull(project.tasks.findByName(CopyRnBundleTask.NAME))
    }

    @Test
    fun `plugin register extension`() {
        // Given
        val project = ProjectBuilder.builder().build()

        // When
        project.plugins.apply(GradleReactNativePlugin.PLUGIN)

        // Then
        val actual: ReactNativeExtension? = project.extensions
            .findByName(ReactNativeExtension.EXTENSION) as ReactNativeExtension?

        assertNotNull(actual)
        assertEquals("../../", actual.root)
        assertEquals("index.android.bundle", actual.bundleAssetName)
        assertEquals("index.android.js", actual.entryFile)
        assertEquals("ram-bundle", actual.bundleCommand)
    }

    @Test
    fun `plugin nested extensions, buildTypes`() {
        // Given
        val project = ProjectBuilder.builder().build()

        // When
        project.plugins.apply(GradleReactNativePlugin.ANDROID_APP_PLUGIN)
        project.plugins.apply(GradleReactNativePlugin.PLUGIN)

        val ext = project.extensions.getByName(ReactNativeExtension.EXTENSION)
            as? ReactNativeExtension

        assertNotNull(ext)
        assertNotNull(ext.buildTypes)
//        assertEquals(2, ext.buildTypes.size)

        // composed build types that correspond android project
        ext.buildTypes.forEach {
            assertNotNull(it.name)
            println(it.name)
        }
    }
}
